apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
apply from: '../config/quality/quality.gradle'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.scrachx.foodfacts.checker"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            buildConfigField("String", "BASE_URL", "\"https://ssl-api.openfoodfacts.org\"")
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField("String", "BASE_URL", "\"https://ssl-api.openfoodfacts.org\"")
        }
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
    defaultConfig {
        multiDexEnabled true
        jackOptions.enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
}

greendao {
    schemaVersion 1
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // android support libraries
    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:animated-vector-drawable:$rootProject.supportLibraryVersion"
    compile "com.android.support:preference-v14:$rootProject.supportLibraryVersion"
    compile "com.android.support:customtabs:$rootProject.supportLibraryVersion"

    // string
    compile "org.apache.commons:commons-lang3:$rootProject.commonLang3"

    // font
    compile "uk.co.chrisjenx:calligraphy:$rootProject.calligraphyVersion"

    // network
    compile "com.amitshekhar.android:rx2-android-networking:$rootProject.rx2FastAndroidNetworking"

    // parser
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "com.amitshekhar.android:jackson-android-networking:$rootProject.jacksonAndroidNetworking"

    // database
    compile "org.greenrobot:greendao:$rootProject.greenDaoVersion"

    // scanner
    compile "me.dm7.barcodescanner:zxing:$rootProject.barcodeScanner"

    // apache
    compile "commons-validator:commons-validator:$rootProject.apacheValidator"

    // chart
    compile "com.github.PhilJay:MPAndroidChart:$rootProject.mpChart"

    // dialog
    compile "com.afollestad.material-dialogs:core:$rootProject.materialDialog"

    // glide
    compile "com.github.bumptech.glide:glide:$rootProject.glide"

    // photoview
    compile "com.github.chrisbanes:PhotoView:$rootProject.photoView"

    // debug database
    debugCompile "com.amitshekhar.android:debug-db:$rootProject.debugDBVersion"

    // dependency injection
    compile "com.google.dagger:dagger:$rootProject.dagger2Version"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
    provided 'javax.annotation:jsr250-api:1.0'
    compile 'javax.inject:javax.inject:1'

    // reactive
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"
    compile "io.reactivex.rxjava2:rxandroid:$rootProject.rxandroidVersion"

    // code generator for view
    compile "com.jakewharton:butterknife:$rootProject.butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterKnifeVersion"

    // swipe view
    compile "com.mindorks:placeholderview:$rootProject.placeholderviewVersion"

    // logger
    compile "com.jakewharton.timber:timber:$rootProject.timberVersion"

    // dependencies for local unit tests
    testCompile "junit:junit:$rootProject.ext.junitVersion"
    testCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    testAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"

    // UI Testing
    androidTestCompile "com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion"
    androidTestCompile "org.mockito:mockito-core:$rootProject.mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$rootProject.dagger2Version"
}

configurations.all {
    resolutionStrategy.force "com.android.support:support-annotations:$supportLibraryVersion"
}
